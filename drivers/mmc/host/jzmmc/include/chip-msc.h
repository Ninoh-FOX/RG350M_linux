/*
 * drivers/mmc/host/jzmmc/include/chip-msc.h
 *
 * JZ4770 MSC register definition.
 *
 * Copyright (C) 2010 Ingenic Semiconductor Co., Ltd.
 */

#ifndef __CHIP_MSC_H__
#define __CHIP_MSC_H__

#include <asm/mach-jz4770/jz4770misc.h>


#define MSC0_BASE	0xB0021000
#define MSC1_BASE	0xB0022000
#define MSC2_BASE	0xB0023000


/* n = 0, 1 (MSC0, MSC1) */
#define MSC_STRPCL(n)		(MSC0_BASE + (n)*0x1000 + 0x000)
#define MSC_STAT(n)		(MSC0_BASE + (n)*0x1000 + 0x004)
#define MSC_CLKRT(n)		(MSC0_BASE + (n)*0x1000 + 0x008)
#define MSC_CMDAT(n)		(MSC0_BASE + (n)*0x1000 + 0x00C)
#define MSC_RESTO(n)		(MSC0_BASE + (n)*0x1000 + 0x010)
#define MSC_RDTO(n)		(MSC0_BASE + (n)*0x1000 + 0x014)
#define MSC_BLKLEN(n)		(MSC0_BASE + (n)*0x1000 + 0x018)
#define MSC_NOB(n)		(MSC0_BASE + (n)*0x1000 + 0x01C)
#define MSC_SNOB(n)		(MSC0_BASE + (n)*0x1000 + 0x020)
#define MSC_IMASK(n)		(MSC0_BASE + (n)*0x1000 + 0x024)
#define MSC_IREG(n)		(MSC0_BASE + (n)*0x1000 + 0x028)
#define MSC_CMD(n)		(MSC0_BASE + (n)*0x1000 + 0x02C)
#define MSC_ARG(n)		(MSC0_BASE + (n)*0x1000 + 0x030)
#define MSC_RES(n)		(MSC0_BASE + (n)*0x1000 + 0x034)
#define MSC_RXFIFO(n)		(MSC0_BASE + (n)*0x1000 + 0x038)
#define MSC_TXFIFO(n)		(MSC0_BASE + (n)*0x1000 + 0x03C)
#define MSC_LPM(n)		(MSC0_BASE + (n)*0x1000 + 0x040)

#define REG_MSC_STRPCL(n)	REG16(MSC_STRPCL(n))
#define REG_MSC_STAT(n)		REG32(MSC_STAT(n))
#define REG_MSC_CLKRT(n)	REG16(MSC_CLKRT(n))
#define REG_MSC_CMDAT(n)	REG32(MSC_CMDAT(n))
#define REG_MSC_RESTO(n)	REG16(MSC_RESTO(n))
#define REG_MSC_RDTO(n)		REG32(MSC_RDTO(n))
#define REG_MSC_BLKLEN(n)	REG16(MSC_BLKLEN(n))
#define REG_MSC_NOB(n)		REG16(MSC_NOB(n))
#define REG_MSC_SNOB(n)		REG16(MSC_SNOB(n))
#define REG_MSC_IMASK(n)	REG32(MSC_IMASK(n))
#define REG_MSC_IREG(n)		REG16(MSC_IREG(n))
#define REG_MSC_CMD(n)		REG8(MSC_CMD(n))
#define REG_MSC_ARG(n)		REG32(MSC_ARG(n))
#define REG_MSC_RES(n)		REG16(MSC_RES(n))
#define REG_MSC_RXFIFO(n)	REG32(MSC_RXFIFO(n))
#define REG_MSC_TXFIFO(n)	REG32(MSC_TXFIFO(n))
#define REG_MSC_LPM(n)		REG32(MSC_LPM(n))

/* MSC Clock and Control Register (MSC_STRPCL) */
#define MSC_STRPCL_SEND_CCSD			(1 << 15) /*send command completion signal disable to ceata */
#define MSC_STRPCL_SEND_AS_CCSD			(1 << 14) /*send internally generated stop after sending ccsd */
#define MSC_STRPCL_EXIT_MULTIPLE		(1 << 7)
#define MSC_STRPCL_EXIT_TRANSFER		(1 << 6)
#define MSC_STRPCL_START_READWAIT		(1 << 5)
#define MSC_STRPCL_STOP_READWAIT		(1 << 4)
#define MSC_STRPCL_RESET			(1 << 3)
#define MSC_STRPCL_START_OP			(1 << 2)
#define MSC_STRPCL_CLOCK_CONTROL_BIT		0
#define MSC_STRPCL_CLOCK_CONTROL_MASK		(0x3 << MSC_STRPCL_CLOCK_CONTROL_BIT)
  #define MSC_STRPCL_CLOCK_CONTROL_STOP		(0x1 << MSC_STRPCL_CLOCK_CONTROL_BIT) /* Stop MMC/SD clock */
  #define MSC_STRPCL_CLOCK_CONTROL_START	(0x2 << MSC_STRPCL_CLOCK_CONTROL_BIT) /* Start MMC/SD clock */

/* MSC Status Register (MSC_STAT) */
#define MSC_STAT_AUTO_CMD_DONE			(1 << 31) /*12 is internally generated by controller has finished */
#define MSC_STAT_IS_RESETTING			(1 << 15)
#define MSC_STAT_SDIO_INT_ACTIVE		(1 << 14)
#define MSC_STAT_PRG_DONE			(1 << 13)
#define MSC_STAT_DATA_TRAN_DONE			(1 << 12)
#define MSC_STAT_END_CMD_RES			(1 << 11)
#define MSC_STAT_DATA_FIFO_AFULL		(1 << 10)
#define MSC_STAT_IS_READWAIT			(1 << 9)
#define MSC_STAT_CLK_EN				(1 << 8)
#define MSC_STAT_DATA_FIFO_FULL			(1 << 7)
#define MSC_STAT_DATA_FIFO_EMPTY		(1 << 6)
#define MSC_STAT_CRC_RES_ERR			(1 << 5)
#define MSC_STAT_CRC_READ_ERROR			(1 << 4)
#define MSC_STAT_CRC_WRITE_ERROR_BIT		2
#define MSC_STAT_CRC_WRITE_ERROR_MASK		(0x3 << MSC_STAT_CRC_WRITE_ERROR_BIT)
  #define MSC_STAT_CRC_WRITE_ERROR_NO		(0 << MSC_STAT_CRC_WRITE_ERROR_BIT) /* No error on transmission of data */
  #define MSC_STAT_CRC_WRITE_ERROR		(1 << MSC_STAT_CRC_WRITE_ERROR_BIT) /* Card observed erroneous transmission of data */
  #define MSC_STAT_CRC_WRITE_ERROR_NOSTS	(2 << MSC_STAT_CRC_WRITE_ERROR_BIT) /* No CRC status is sent back */
#define MSC_STAT_TIME_OUT_RES			(1 << 1)
#define MSC_STAT_TIME_OUT_READ			(1 << 0)

/* MSC Bus Clock Control Register (MSC_CLKRT) */
#define MSC_CLKRT_CLK_RATE_BIT		0
#define MSC_CLKRT_CLK_RATE_MASK		(0x7 << MSC_CLKRT_CLK_RATE_BIT)
#define MSC_CLKRT_CLK_RATE_DIV_1	(0x0 << MSC_CLKRT_CLK_RATE_BIT) /* CLK_SRC */
#define MSC_CLKRT_CLK_RATE_DIV_2	(0x1 << MSC_CLKRT_CLK_RATE_BIT) /* 1/2 of CLK_SRC */
#define MSC_CLKRT_CLK_RATE_DIV_4	(0x2 << MSC_CLKRT_CLK_RATE_BIT) /* 1/4 of CLK_SRC */
#define MSC_CLKRT_CLK_RATE_DIV_8	(0x3 << MSC_CLKRT_CLK_RATE_BIT) /* 1/8 of CLK_SRC */
#define MSC_CLKRT_CLK_RATE_DIV_16	(0x4 << MSC_CLKRT_CLK_RATE_BIT) /* 1/16 of CLK_SRC */
#define MSC_CLKRT_CLK_RATE_DIV_32	(0x5 << MSC_CLKRT_CLK_RATE_BIT) /* 1/32 of CLK_SRC */
#define MSC_CLKRT_CLK_RATE_DIV_64	(0x6 << MSC_CLKRT_CLK_RATE_BIT) /* 1/64 of CLK_SRC */
#define MSC_CLKRT_CLK_RATE_DIV_128	(0x7 << MSC_CLKRT_CLK_RATE_BIT) /* 1/128 of CLK_SRC */

/* MSC Command Sequence Control Register (MSC_CMDAT) */
#define MSC_CMDAT_CCS_EXPECTED		(1 << 31) /* interrupts are enabled in ce-ata */
#define MSC_CMDAT_READ_CEATA		(1 << 30)
#define MSC_CMDAT_SDIO_PRDT		(1 << 17) /* exact 2 cycle */
#define MSC_CMDAT_SEND_AS_STOP		(1 << 16)
#define MSC_CMDAT_RTRG_BIT		14
#define MSC_CMDAT_RTRG_EQUALT_8	        (0x0 << MSC_CMDAT_RTRG_BIT) /*reset value*/
  #define MSC_CMDAT_RTRG_EQUALT_16	(0x1 << MSC_CMDAT_RTRG_BIT)
  #define MSC_CMDAT_RTRG_EQUALT_24	(0x2 << MSC_CMDAT_RTRG_BIT)
#define MSC_CMDAT_TTRG_BIT		12
#define MSC_CMDAT_TTRG_LESS_8		(0x0 << MSC_CMDAT_TTRG_BIT) /*reset value*/
  #define MSC_CMDAT_TTRG_LESS_16	(0x1 << MSC_CMDAT_TTRG_BIT)
  #define MSC_CMDAT_TTRG_LESS_24	(0x2 << MSC_CMDAT_TTRG_BIT)
#define MSC_CMDAT_STOP_ABORT		(1 << 11)
#define MSC_CMDAT_BUS_WIDTH_BIT		9
#define MSC_CMDAT_BUS_WIDTH_MASK	(0x3 << MSC_CMDAT_BUS_WIDTH_BIT)
  #define MSC_CMDAT_BUS_WIDTH_1BIT	(0x0 << MSC_CMDAT_BUS_WIDTH_BIT) /* 1-bit data bus */
  #define MSC_CMDAT_BUS_WIDTH_4BIT	(0x2 << MSC_CMDAT_BUS_WIDTH_BIT) /* 4-bit data bus */
  #define MSC_CMDAT_BUS_WIDTH_8BIT	(0x3 << MSC_CMDAT_BUS_WIDTH_BIT) /* 8-bit data bus */
#define MSC_CMDAT_DMA_EN		(1 << 8)
#define MSC_CMDAT_INIT			(1 << 7)
#define MSC_CMDAT_BUSY			(1 << 6)
#define MSC_CMDAT_STREAM_BLOCK		(1 << 5)
#define MSC_CMDAT_WRITE			(1 << 4)
#define MSC_CMDAT_READ			(0 << 4)
#define MSC_CMDAT_DATA_EN		(1 << 3)
#define MSC_CMDAT_RESPONSE_BIT		0
#define MSC_CMDAT_RESPONSE_MASK		(0x7 << MSC_CMDAT_RESPONSE_BIT)
  #define MSC_CMDAT_RESPONSE_NONE	(0x0 << MSC_CMDAT_RESPONSE_BIT) /* No response */
  #define MSC_CMDAT_RESPONSE_R1		(0x1 << MSC_CMDAT_RESPONSE_BIT) /* Format R1 and R1b */
  #define MSC_CMDAT_RESPONSE_R2		(0x2 << MSC_CMDAT_RESPONSE_BIT) /* Format R2 */
  #define MSC_CMDAT_RESPONSE_R3		(0x3 << MSC_CMDAT_RESPONSE_BIT) /* Format R3 */
  #define MSC_CMDAT_RESPONSE_R4		(0x4 << MSC_CMDAT_RESPONSE_BIT) /* Format R4 */
  #define MSC_CMDAT_RESPONSE_R5		(0x5 << MSC_CMDAT_RESPONSE_BIT) /* Format R5 */
  #define MSC_CMDAT_RESPONSE_R6		(0x6 << MSC_CMDAT_RESPONSE_BIT) /* Format R6 */
  #define MSC_CMDAT_RESRONSE_R7		(0x7 << MSC_CMDAT_RESPONSE_BIT) /* Format R7 */

/* MSC Interrupts Mask Register (MSC_IMASK) */
#define MSC_IMASK_AUTO_CMD_DONE		(1 << 15)
#define MSC_IMASK_DATA_FIFO_FULL	(1 << 14)
#define MSC_IMASK_DATA_FIFO_EMP		(1 << 13)
#define MSC_IMASK_CRC_RES_ERR		(1 << 12)
#define MSC_IMASK_CRC_READ_ERR		(1 << 11)
#define MSC_IMASK_CRC_WRITE_ERR		(1 << 10)
#define MSC_IMASK_TIME_OUT_RES		(1 << 9)
#define MSC_IMASK_TIME_OUT_READ		(1 << 8)
#define MSC_IMASK_SDIO			(1 << 7)
#define MSC_IMASK_TXFIFO_WR_REQ		(1 << 6)
#define MSC_IMASK_RXFIFO_RD_REQ		(1 << 5)
#define MSC_IMASK_END_CMD_RES		(1 << 2)
#define MSC_IMASK_PRG_DONE		(1 << 1)
#define MSC_IMASK_DATA_TRAN_DONE	(1 << 0)

/* MSC Interrupts Status Register (MSC_IREG) */
#define MSC_IREG_AUTO_CMD_DONE		(1 << 15)
#define MSC_IREG_DATA_FIFO_FULL		(1 << 14)
#define MSC_IREG_DATA_FIFO_EMP		(1 << 13)
#define MSC_IREG_CRC_RES_ERR		(1 << 12)
#define MSC_IREG_CRC_READ_ERR		(1 << 11)
#define MSC_IREG_CRC_WRITE_ERR		(1 << 10)
#define MSC_IREG_TIMEOUT_RES		(1 << 9)
#define MSC_IREG_TIMEOUT_READ		(1 << 8)
#define MSC_IREG_SDIO			(1 << 7)
#define MSC_IREG_TXFIFO_WR_REQ		(1 << 6)
#define MSC_IREG_RXFIFO_RD_REQ		(1 << 5)
#define MSC_IREG_END_CMD_RES		(1 << 2)
#define MSC_IREG_PRG_DONE		(1 << 1)
#define MSC_IREG_DATA_TRAN_DONE		(1 << 0)

/* MSC Low Power Mode Register (MSC_LPM) */
#define MSC_SET_HISPD			(1 << 31)
#define MSC_SET_LPM			(1 << 0)

#endif /* __CHIP_MSC_H__ */
